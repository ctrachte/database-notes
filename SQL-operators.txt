Write out a generic SELECT statement.

    SELECT <column1, column2, ... *>
    FROM <table1, table2 ...>
    <optional: WHERE <condition>>

Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.

- The way I remember the order of operations (this may not be correct) is: 
 1.) What? <what data?>
 2.) Where? <what table?>
 3.) How? <conditions?>


Given this dogs table, write queries to select the following pieces of data:

CREATE TABLE dogs (
  "id"          INTEGER, 
  "name"        VARCHAR(25),
  "gender"      VARCHAR(1),
  "age"         INTEGER,
  "weight"      INTEGER,
  "breed"       TEXT,
  "intake_date" DATE,
  "in_foster"   DATE
);

INSERT INTO dogs
  ("id",  "name",      "gender", "age", "weight", "breed",              "intake_date", "in_foster")
VALUES
  (10001, 'Boujee',    'F',       3,     36,      'labrador poodle',    '2017-06-22',   null),
  (10002, 'Munchkin',  'F',       0,     8,       'dachsund chihuahua', '2017-01-13',  '2017-01-31'),
  (10004, 'Marley',    'M',       0,     10,      'labrador',           '2017-05-04',  '2016-06-20'),
  (10003, 'Lassie',    'F',       7,     17,      'collie shepherd',    '2016-07-05',  '2017-07-22'),
  (10006, 'Marmaduke', 'M',       7,     150,     'great dane',         '2016-03-22',  '2016-05-15'),
  (10007, 'Rosco',     'M',       5,     180,     'rottweiler',         '2017-04-01',   null);



Intake teams typically guess the breed of shelter dogs, so the breed column may have multiple words (for example, "Labrador Collie mix").

Display the name, gender, and age of all dogs that are part Labrador.

    SELECT name, gender, age
    FROM dogs
    WHERE breed LIKE '%labrador%';

Display the ids of all dogs that are under 1 year old.

    SELECT id
    FROM dogs
    WHERE age < 1;


Display the name and age of all dogs that are female and over 35lbs.

    SELECT name, age
    FROM dogs
    WHERE gender = 'F' AND weight > 35;

Display all of the information about all dogs that are not Shepherd mixes.

    SELECT *
    FROM dogs
    WHERE breed NOT LIKE '%shepherd%';

Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.

    SELECT id, age, weight, breed
    FROM dogs
    WHERE breed LIKE '%great dane%' OR weight > 60;

Given this cats table, what records are returned from these queries?

SELECT name, adoption_date FROM cats;
SELECT name, age FROM cats;
From the cats table, write queries to select the following pieces of data.
Display all the information about all of the available cats.
Choose one cat of each age to show to potential adopters.
Find all of the names of the cats, so you don’t choose duplicate names for new cats.
List each comparison operator and explain when you would use it. Include a real world example for each.
If you can’t list these from memory, do these flashcards until you can!
From the cats table, what data is returned from these queries?
SELECT name FROM cats WHERE gender = ‘F’;
SELECT name FROM cats WHERE age <> 3;
SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;